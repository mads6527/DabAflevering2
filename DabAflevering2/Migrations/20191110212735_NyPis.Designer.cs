// <auto-generated />
using System;
using DabAflevering2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DabAflevering2.Migrations
{
    [DbContext(typeof(ResturentContext))]
    [Migration("20191110212735_NyPis")]
    partial class NyPis
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DabAflevering2.Models.Dish", b =>
                {
                    b.Property<int>("DishId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Price");

                    b.Property<int>("ReviewId");

                    b.Property<string>("Type");

                    b.HasKey("DishId");

                    b.HasIndex("ReviewId");

                    b.ToTable("Dish");

                    b.HasData(
                        new
                        {
                            DishId = 1,
                            Price = 44.0,
                            ReviewId = 1,
                            Type = "Spaghetti Carbonara"
                        },
                        new
                        {
                            DishId = 2,
                            Price = 39.0,
                            ReviewId = 2,
                            Type = "Spaghetti Bolognese"
                        },
                        new
                        {
                            DishId = 3,
                            Price = 55.0,
                            ReviewId = 3,
                            Type = "Lasagna"
                        },
                        new
                        {
                            DishId = 4,
                            Price = 60.0,
                            ReviewId = 4,
                            Type = "Spaghetti ala Casa"
                        });
                });

            modelBuilder.Entity("DabAflevering2.Models.GuestDishes", b =>
                {
                    b.Property<int>("DishId");

                    b.Property<int>("PersonId");

                    b.HasKey("DishId", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("GuestDishes");
                });

            modelBuilder.Entity("DabAflevering2.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.HasKey("PersonId");

                    b.ToTable("Person");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Name = "Mads Jørgensen"
                        },
                        new
                        {
                            PersonId = 2,
                            Name = "Andreas Elgaard Sørensen"
                        },
                        new
                        {
                            PersonId = 3,
                            Name = "Mark Højer"
                        },
                        new
                        {
                            PersonId = 4,
                            Name = "Mathias Jørgensen"
                        });
                });

            modelBuilder.Entity("DabAflevering2.Models.Resturent", b =>
                {
                    b.Property<int>("ResturentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Name");

                    b.Property<string>("Type");

                    b.HasKey("ResturentId");

                    b.ToTable("Resturent");

                    b.HasData(
                        new
                        {
                            ResturentId = 1,
                            Address = "NørreAllé 47, 8000",
                            Name = "South India",
                            Type = "Indisk"
                        },
                        new
                        {
                            ResturentId = 2,
                            Address = "Jægergårdsgade 87, 8000",
                            Name = "Burger Boom",
                            Type = "American"
                        },
                        new
                        {
                            ResturentId = 3,
                            Address = "StreetFood Aarhus, 8000",
                            Name = "Indian Kitchen",
                            Type = "Indisk"
                        });
                });

            modelBuilder.Entity("DabAflevering2.Models.ResturentDishes", b =>
                {
                    b.Property<int>("DishId");

                    b.Property<int>("ResturentId");

                    b.HasKey("DishId", "ResturentId");

                    b.HasIndex("ResturentId");

                    b.ToTable("ResturentDishes");
                });

            modelBuilder.Entity("DabAflevering2.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ResturentId");

                    b.Property<int>("Stars");

                    b.Property<string>("Text");

                    b.HasKey("ReviewId");

                    b.HasIndex("ResturentId");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            ResturentId = 1,
                            Stars = 1,
                            Text = "Fin mad, rigtigt dårlig service"
                        },
                        new
                        {
                            ReviewId = 2,
                            ResturentId = 2,
                            Stars = 4,
                            Text = "Maden var perfekt, krydret til perfektion. Dog lidt mangler på service"
                        },
                        new
                        {
                            ReviewId = 3,
                            ResturentId = 3,
                            Stars = 3,
                            Text = "Altid godt, men aldrig ekstraordinært"
                        },
                        new
                        {
                            ReviewId = 4,
                            ResturentId = 1,
                            Stars = 1,
                            Text = "Det pureste lort.."
                        },
                        new
                        {
                            ReviewId = 5,
                            ResturentId = 3,
                            Stars = 2,
                            Text = "Okay, men langt fra godt..."
                        });
                });

            modelBuilder.Entity("DabAflevering2.Models.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Number");

                    b.Property<int>("ResturentId");

                    b.HasKey("TableId");

                    b.HasIndex("ResturentId");

                    b.ToTable("Table");
                });

            modelBuilder.Entity("DabAflevering2.Models.TableWaiters", b =>
                {
                    b.Property<int>("TableId");

                    b.Property<int>("PersonId");

                    b.HasKey("TableId", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("TableWaiters");
                });

            modelBuilder.Entity("DabAflevering2.Models.Guest", b =>
                {
                    b.HasBaseType("DabAflevering2.Models.Person");

                    b.Property<int?>("ReviewId");

                    b.Property<int>("TableId");

                    b.Property<DateTime>("Time");

                    b.HasIndex("ReviewId");

                    b.HasIndex("TableId");

                    b.HasDiscriminator().HasValue("Guest");
                });

            modelBuilder.Entity("DabAflevering2.Models.Waiter", b =>
                {
                    b.HasBaseType("DabAflevering2.Models.Person");

                    b.Property<double>("Salery");

                    b.HasDiscriminator().HasValue("Waiter");
                });

            modelBuilder.Entity("DabAflevering2.Models.Dish", b =>
                {
                    b.HasOne("DabAflevering2.Models.Review", "Review")
                        .WithMany("Dishes")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DabAflevering2.Models.GuestDishes", b =>
                {
                    b.HasOne("DabAflevering2.Models.Dish", "Dish")
                        .WithMany("GuestDishes")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DabAflevering2.Models.Guest", "Guest")
                        .WithMany("guestDishes")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DabAflevering2.Models.ResturentDishes", b =>
                {
                    b.HasOne("DabAflevering2.Models.Dish", "Dish")
                        .WithMany("ResturentDishes")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DabAflevering2.Models.Resturent", "Resturent")
                        .WithMany("ResturentDishes")
                        .HasForeignKey("ResturentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DabAflevering2.Models.Review", b =>
                {
                    b.HasOne("DabAflevering2.Models.Resturent", "Resturent")
                        .WithMany("Reviews")
                        .HasForeignKey("ResturentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DabAflevering2.Models.Table", b =>
                {
                    b.HasOne("DabAflevering2.Models.Resturent", "Resturent")
                        .WithMany("Tables")
                        .HasForeignKey("ResturentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DabAflevering2.Models.TableWaiters", b =>
                {
                    b.HasOne("DabAflevering2.Models.Waiter", "Waiter")
                        .WithMany("TableWaiters")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DabAflevering2.Models.Table", "Table")
                        .WithMany("TableWaiters")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DabAflevering2.Models.Guest", b =>
                {
                    b.HasOne("DabAflevering2.Models.Review", "Review")
                        .WithMany("Guests")
                        .HasForeignKey("ReviewId");

                    b.HasOne("DabAflevering2.Models.Table", "Table")
                        .WithMany("Guests")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
